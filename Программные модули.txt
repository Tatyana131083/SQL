 В КОНТЕЙНЕРЕ VIEW
ПРЕДСТАВЛЕНИЕ В ВИДЕ ТАБЛИЦЫ

CREATE VIEW MySales
  AS 
	SELECT ....
	FROM  ....
гибкая снаружи, все что делаем с таблицей, делаем с VIEW
************************************
CREATE PROCEDURE ContactName @Str varchar(10),
			     @Qty int
  AS
	SELECT ...
	FROM ....
	where Title like '%'+ @Str + '%'


EXECUTE ContactName 'a', 30

Процедура не усложняется снаружи, только внутри
Процедуру вызываем
не гибкая снаружи
можно использовать параметры

************************************
ФУНКЦИЯ
CREATE FUNCTION ContactName2 (
			     @Str varchar(10),
			     @Qty int
			     )
  RETURNS TABLE 	
  AS
    RETURN
	SELECT ...
	FROM ....
	where Title like '%'+ @Str + '%'

позволяет совместить плюсы вью и процедур
можно усложнять и внутри и снаружи

///сколько дней прошло от предыдущей продажи до текущей по продавцам
CREATE FUNCTION ListIntervals(@EmployeeID int)
  RETURNS TABLE
AS
RETURN 
SELECT OrderDate AS OrderDate, 
       LAG(OrderDate, 1, OrderDate) OVER (ORDER BY OrderDate ASC) AS LAG ,
	   DATEDIFF(DAY, LAG(OrderDate, 1, OrderDate) OVER (ORDER BY OrderDate ASC)
	            ,OrderDate) AS DATEDIFF
FROM dbo.Orders
WHERE EmployeeID = @EmployeeID;

SELECT *
FROM ListIntervals(1)
----------------------------------------
--сколько у каждого продавца было периодов без заказа длиной 20 дней

SELECT [FirstName] + ' ' + [LastName],
	(
	 SELECT Count(*)
	 FROM ListIntervals(Employees.EmployeeID)
	 WHERE DATEDIFF = 20
	 )
FROM [dbo].[Employees] 


**************************************
ТАБЛИЧНЫЕ ВЫРАЖЕНИЯ
ВРЕМЕННАЯ VIEW
ПОСЛЕ ИСПОЛЬЗОВАНИЯ САМОЛИКВИДИРУЕТСЯ
СПОЛЬЗОВАТЬ ВМЕСТО ПОДЗАПРОСОВ В ПОЛЕ FROM

WITH <H>
  AS(
     SELECT ...
     FROM ....	
    )

SELECT *
FROM <H>




